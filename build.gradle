plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
    id "io.freefair.lombok" version "6.0.0-m2"
}

repositories {
    mavenCentral()
}

def allureVersion = "2.21.0",
    selenideVersion = "6.19.1",
    fakerVersion = "1.0.2",
    sl4jVersion = "2.0.7",
    junitVersion = "5.10.0",
    restAssuredVersion = "5.1.0",
    jacksonVersion = "2.15.2"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

compileTestJava {
    options.encoding = 'UTF-8'
}

dependencies {
    testImplementation (
            "com.codeborne:selenide:$selenideVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",

            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",

            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$sl4jVersion",
            "com.github.javafaker:javafaker:$fakerVersion",

            "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    )
}

tasks.withType(Test).configureEach {
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task web_test(type: Test) {
    useJUnitPlatform {
        includeTags("smoke")
    }
}

task api_test(type: Test) {
    useJUnitPlatform {
        includeTags("api")
    }
}